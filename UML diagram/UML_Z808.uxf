<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text/>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>820</x>
      <y>370</y>
      <w>210</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>RegFlags
-
- of : boolean
- sf : boolean
- zf : boolean
- if : boolean
- pf : boolean
- cf : boolean
-
+ getters : boolean
+ setters : void
+ reset() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>620</y>
      <w>290</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>UnsignedByte
-
- value : int
-
+ setValue(val : int) : void
+ getValue() : int
_+ concatenateBytes(b1 : int, b2 : int): int_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>70</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Memory
-
- memory : unsigned short [65536]
- instance : Memory
-
+ getInstance() : Memory
# write(val : unsigned short) : void
# read() : unsigned short</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>30</y>
      <w>290</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Interpreter
-
- ax : RegWork
- dx : RegWork
- sp : RegWork
- si : RegWork
- ip : RegWork
- sr : RegFlags
- dataMem : DataMemory
- instructionMem : InstructionMemory
- invoker : Invoker

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>0</y>
      <w>240</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataMemory
-
+ getInstance() : Memory
# write(val : unsigned short) : void
# read() : unsigned short</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>150</y>
      <w>240</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
InstructionMemory
-
+ getInstance() : Memory
# write(val : unsigned short) : void
# read() : unsigned short</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>50</y>
      <w>110</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;40.0;10.0;40.0;80.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>120</y>
      <w>110</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;80.0;40.0;80.0;40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1110</x>
      <y>30</y>
      <w>340</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Invoker
-
- command : Command
- opCodeMap : HashMap&lt;UnsignedByte,Command&gt;
-
+ setOperation(UnsignedByte opcode) : void
+ doOperation(List&lt;Object&gt; args)


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>950</x>
      <y>80</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;80.0;10.0;80.0;70.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>390</y>
      <w>290</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>RegWork
-
- regHigh : UnsignedByte
- regLow : UnsignedByte
-
+ getRegHigh() : UnsignedByte
+ getRegLow() : UnsignedByte
+ getReg() : UnsignedShort
+ setRegHigh(value : UnsignedByte) : void
+ setRegLow(value : UnsignedByte) : void
+ setReg(value : UnsignedShort) : void</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
